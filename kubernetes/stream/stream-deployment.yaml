apiVersion: apps/v1
kind: Deployment
metadata:
  name: stream
  namespace: dhbw-tube
spec:
  replicas: 1
  selector:
    matchLabels:
      app: stream
  template:
    metadata:
      labels:
        app: stream
    spec:
      # Stream depends on postgres and minio. Therefore, we need to wait for them to be ready.
      initContainers:
        - name: wait-for-minio
          image: busybox
          command: [ 'sh', '-c', 'until nc -z minio 9000; do echo waiting for minio; sleep 5; done;' ]
        - name: wait-for-postgres
          image: postgres:alpine
          command: [ 'sh', '-c', 'until pg_isready -h postgres -p 5432 -U postgres; do echo waiting for postgres; sleep 5; done;' ]

      # Define stream container with liveliness and readiness probes to check if the container is running / healthy.
      containers:
        - name: stream
          image: dhbw-tube-stream
          imagePullPolicy: Never
          envFrom:
            - configMapRef:
                name: stream-config
          ports:
            - containerPort: 5000
          livenessProbe:
            httpGet:
              path: /health
              port: 5000
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: 5000
            initialDelaySeconds: 30
            periodSeconds: 10