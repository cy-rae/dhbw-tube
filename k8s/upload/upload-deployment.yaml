apiVersion: apps/v1
kind: Deployment
metadata:
  name: upload-deployment
  namespace: dhbw-tube
spec:
  replicas: 1
  selector:
    matchLabels:
      app: upload-app
  template:
    metadata:
      labels:
        app: upload-app
    spec:
      # Upload depends on postgres and minio. Therefore, we need to wait for them to be ready using init containers.
      initContainers:
        - name: wait-for-minio
          image: busybox
          command: [ 'sh', '-c', 'until nc -z minio 9000; do echo waiting for minio; sleep 5; done;' ]
        - name: wait-for-postgres
          image: postgres:alpine
          command: [ 'sh', '-c', 'until pg_isready -h postgres -p 5432 -U postgres; do echo waiting for postgres; sleep 5; done;' ]

      containers:
        - name: upload
          image: dhbw-tube-upload
          imagePullPolicy: Never
          envFrom:
            - configMapRef:
                name: upload-config-map
          ports:
            - containerPort: 5000

          # Define liveness and readiness probes so frontend can check if upload is ready.
          livenessProbe:
            httpGet:
              path: /health
              port: 5000
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: /health
              port: 5000
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 5