apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres-stateful-set
  namespace: dhbw-tube
spec:
  serviceName: postgres-service
  replicas: 1
  selector:
    matchLabels:
      app: postgres-app
  template:
    metadata:
      labels:
        app: postgres-app
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: /metrics
        prometheus.io/port: "5432"
    spec:
      containers:
        - name: postgres
          image: postgres
          envFrom:
            - configMapRef:
                name: postgres-config-map
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_PASSWORD
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data

          # Define liveness and readiness probes so upload and stream can check if upload is ready.
          livenessProbe:
            exec:
              command: [ "pg_isready", "-U", "postgres" ]
            initialDelaySeconds: 20
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 10
          readinessProbe:
            exec:
              command: [ "pg_isready", "-U", "postgres" ]
            initialDelaySeconds: 20
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 10

      volumes:
        - name: postgres-data
          persistentVolumeClaim:
            claimName: postgres-pvc