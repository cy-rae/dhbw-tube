apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: minio-stateful-set
  namespace: dhbw-tube
spec:
  serviceName: minio-service
  replicas: 1
  selector:
    matchLabels:
      app: minio-app
  template:
    metadata:
      labels:
        app: minio-app
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: /metrics
        prometheus.io/port: "9000"
    spec:
      containers:
        - name: minio
          image: minio
          args:
            - server
            - /data
          env:
            - name: MINIO_ROOT_USER
              valueFrom:
                secretKeyRef:
                  name: minio-secret
                  key: MINIO_ACCESS_KEY
            - name: MINIO_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: minio-secret
                  key: MINIO_SECRET_KEY
          ports:
            - containerPort: 9000
            - containerPort: 9001
          volumeMounts:
            - name: minio-data
              mountPath: /data

          resources:
            requests:           # Define initial resource requests for the container. They will be adjusted by the VPA.
              cpu: "500m"
              memory: "1Gi"
            limits:
              cpu: "1"
              memory: "10Gi"

          # Define liveness and readiness probes so upload and stream can check if upload is ready.
          livenessProbe:
            exec:
              command: [ "/usr/local/bin/check-health.sh" ]
            initialDelaySeconds: 20
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 10
          readinessProbe:
            exec:
              command: [ "/usr/local/bin/check-health.sh" ]
            initialDelaySeconds: 20
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 10

      volumes:
        - name: minio-data
          persistentVolumeClaim:
            claimName: minio-pvc